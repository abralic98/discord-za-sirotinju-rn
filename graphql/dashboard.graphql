query getAllUserServers {
  getAllUserServers {
    id
    name
    serverImg
    createdBy {
      id
    }
  }
}

query getRoomsByServerId($id: ID!) {
  getRoomsByServerId(id: $id) {
    text {
      id
      name
      maxLimit
    }
    voice {
      id
      name
      maxLimit
    }
  }
}

mutation createRoom($room: CreateRoomInput) {
  createRoom(room: $room) {
    id
  }
}

query getMessagesByRoomId($id: ID!, $page: Int!, $size: Int!, $search: String) {
  getMessagesByRoomId(id: $id, page: $page, size: $size, search: $search) {
    totalPages
    totalElements
    number
    size
    content {
      id
      text
      author {
        id
        avatar
        username
      }
      type
      dateCreated
      imageUrl
    }
  }
}

mutation createMessage($message: CreateMessageInput) {
  createMessage(message: $message) {
    id
  }
}

subscription subscribeToMessagesByRoomId($roomId: ID!) {
  subscribeToMessagesByRoomId(roomId: $roomId) {
    id
    text
    author {
      id
      avatar
      username
    }
    type
    dateCreated
    imageUrl
  }
}

query getServerUsers($id: ID!) {
  getServerById(id: $id) {
    id
    joinedUsers {
      id
      username
      avatar
      userPresence
    }
    createdBy {
      id
    }
  }
}

mutation updateServer($server: UpdateServerInput) {
  updateServer(server: $server) {
    id
    name
    description
    serverImg
    banner
  }
}

query getServerById($id: ID!) {
  getServerById(id: $id) {
    id
    name
    description
    publicServer
    serverImg
    banner
    joinedUsers {
      id
      username
      avatar
      userPresence
    }
    createdBy {
      id
    }
  }
}

mutation kickUserFromServer($input: KickUserInput) {
  kickUserFromServer(input: $input)
}

mutation banUserFromServer($input: BanUserInput) {
  banUserFromServer(input: $input)
}
query getBannedUsersByServerId($id: ID!) {
  getBannedUsersByServerId(id: $id) {
    user {
      id
      username
      avatar
    }
    reason
    dateCreated
    dateUpdated
    banAuthor {
      id
      username
      avatar
    }
  }
}

mutation unbanUserFromServer($input: UnbanUserInput) {
  unbanUserFromServer(input: $input)
}

mutation deleteServer($serverId: ID!) {
  deleteServer(serverId: $serverId)
}

mutation generateInviteLink($serverId: ID!) {
  generateInviteLink(serverId: $serverId)
}

mutation createServer($server: CreateServerInput) {
  createServer(server: $server) {
    id
    name
    serverImg
    createdBy {
      id
    }
  }
}
